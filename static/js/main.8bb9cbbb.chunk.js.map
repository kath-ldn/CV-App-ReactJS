{"version":3,"sources":["Components/PreviewGeneral.js","Components/General.js","Components/PreviewEducation.js","Components/Education.js","Components/PreviewExperience.js","Components/Experience.js","Components/Header.js","App.js","index.js"],"names":["PreviewGeneral","props","class","id","name","email","phone","General","useState","setName","setEmail","setPhone","isVisible","setVisible","handleToggle","className","onSubmit","htmlFor","type","value","onChange","event","target","onClick","PreviewEducation","institution","qualification","dateCompleted","Education","inputValues","setInputValues","handleChange","PreviewExperience","company","position","responsibilities","dateFrom","dateTo","Experience","Header","user","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bb9cbbb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction PreviewGeneral(props) {\n    return(\n        <div class=\"preview\">\n            <h3>General Information</h3>\n                    <div id=\"namePreview\">{props.name}</div>   \n                    <div id=\"emailPreview\">{props.email}</div>   \n                    <div id=\"phonePreview\">{props.phone}</div>   \n        </div>\n    );\n}\n\nexport default PreviewGeneral;","import React, {useState } from \"react\";\nimport PreviewGeneral from './PreviewGeneral.js'\n\n/* Here I am using a function component with basic Hooks - each has it's own state variable, and onChange function\n(within JSX to setState. In other components I will merge these and have a function that does all the variables. */\n\nfunction General(){\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [phone, setPhone] = useState('');\n    const [isVisible, setVisible] = useState(false);\n\n    const handleToggle = () => {\n        setVisible(!isVisible);\n    }\n\n    const handleSubmit = () => {\n            handleToggle();\n    }\n\n    if (isVisible === false) {\n            return(\n                <div className=\"sectionContainer\">\n                    <h2>Your Application</h2>\n                    <h3>General Information</h3>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"inputAndLabel\">\n                                <label htmlFor=\"name\">Name</label><br />\n                                <input name=\"name\" type =\"text\" value={name} onChange={(event) => setName(event.target.value)}></input>\n                            </div>\n                            <div className=\"inputAndLabel\">\n                                <label htmlFor=\"email\">Email</label><br />\n                                <input name=\"email\" type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)}></input>\n                            </div>\n                            <div className=\"inputAndLabel\">\n                                <label htmlFor=\"phone\">Phone</label><br />\n                                <input name=\"phone\" type=\"tel\" value={phone} onChange={(event) => setPhone(event.target.value)}></input>\n                            </div>\n                                <input type=\"submit\" id=\"submitGen\"></input>\n                        </form>\n                    </div>\n            );\n        } else {\n            return(\n                <div className=\"previewDiv\">\n                    <h2>Your Application</h2>\n                        <PreviewGeneral name={name} email={email} phone={phone}/>\n                        <button class=\"edit\" onClick={handleToggle}>Edit</button>\n                </div>\n            )\n        }\n}\n\n\nexport default General;","import React from \"react\";\n\nfunction PreviewEducation(props) {\n    return(\n        <div class=\"preview\">\n            <h3>Education</h3>\n                <div class=\"prevData\"> {props.institution} </div>\n                <div class=\"prevData\"> {props.qualification} </div>\n                <div class=\"prevData\"> {props.dateCompleted} </div>\n        </div>\n    );\n}\n\nexport default PreviewEducation;","import React, { useState } from \"react\";\nimport PreviewEducation from './PreviewEducation.js';\n\n/* used a functional component and one hook with object properties for each input field */\n\nfunction Education() {\n    //state variables\n    const [inputValues, setInputValues] = useState({institution: '',\n        qualification: '', dateCompleted: '', isVisible: false\n    });\n\n    const handleToggle = () => {\n        const value = !inputValues.isVisible\n        setInputValues({...inputValues, isVisible: value})\n    };\n\n    function handleSubmit(){\n        //anything else? if not just set onSubmit to handletoggle. prev had ->subInstitutione tc\n        handleToggle();\n    }\n\n    function handleChange(event){\n        const { name, value } = event.target;\n        setInputValues({...inputValues, [name]: value})\n        //expect could find a way to reuse these functions - to look at\n    }\n\n    if (inputValues.isVisible === false) {\n        return(\n        <div className=\"sectionContainer\">\n            <h3>Education</h3>\n            <form onSubmit={handleSubmit}>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"institution\">Institution Name</label><br />\n                    <input name=\"institution\" type=\"text\" value={inputValues.institution} onChange={handleChange}></input>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"qualification\">Qualification</label><br />\n                    <input name=\"qualification\" type=\"text\" value={inputValues.qualification} onChange={handleChange}></input>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"dateCompleted\">Date Completed</label><br />\n                    <input type=\"date\" name=\"dateCompleted\" value={inputValues.dateCompleted} onChange={handleChange}></input>\n                </div>\n                    <input type=\"submit\" id=\"submitEdu\"></input>\n            </form>\n        </div>\n        )\n    } else {\n        return(\n            <div className=\"previewDiv\">\n            <PreviewEducation institution={inputValues.institution} qualification={inputValues.qualification} dateCompleted={inputValues.dateCompleted} />\n            <button class=\"edit\" onClick={handleToggle}>Edit</button>\n        </div>\n        )\n    }\n\n}\n\nexport default Education;","import React from \"react\";\n\nfunction PreviewExperience(props) {\n    return(\n        <div class=\"preview\">\n            <h3>Experience</h3>\n                <div class=\"prevData\"> {props.company} </div>\n                <div class=\"prevData\"> {props.position} </div>\n                <div class=\"prevData\"> {props.responsibilities} </div>\n                <div class=\"prevData\"> {props.dateFrom} - {props.dateTo} </div>\n        </div>\n    );\n}\n\nexport default PreviewExperience;","import React, { useState } from \"react\";\nimport PreviewExperience from './PreviewExperience.js';\n\nfunction Experience() {\n    const [inputValues, setInputValues] = useState({\n        company: '',\n        position: '',\n        responsibilities: '',\n        dateFrom: '',\n        dateTo: '',\n        isVisible: false\n    })\n\n    const handleToggle = () => {\n        const value = !inputValues.isVisible\n        setInputValues({...inputValues, isVisible: value})\n    };\n\n    function handleSubmit(){\n        //anything else? if not just set onSubmit to handletoggle.\n        handleToggle();\n    }\n\n    function handleChange(event){\n        const { name, value } = event.target;\n        setInputValues({...inputValues, [name]: value})\n        //expect could find a way to reuse these functions - to look at\n    }\n\n    if (inputValues.isVisible === false) {\n    return(\n        <div className=\"sectionContainer\">\n            <h3>Experience</h3>\n            <form onSubmit={handleSubmit}>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"companyName\">Company Name</label><br />\n                    <input name=\"company\" type=\"text\" value={inputValues.company} onChange={handleChange}></input>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"position\">Position</label><br />\n                    <input name=\"position\" type=\"text\" value={inputValues.position} onChange={handleChange}></input>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"responsibilities\">Responsibilities</label><br />\n                    <textarea name=\"responsibilities\" value={inputValues.responsibilities} onChange={handleChange}></textarea>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"dateFrom\">Start Date</label><br />\n                    <input type=\"date\" name=\"dateFrom\" value={inputValues.dateFrom} onChange={handleChange}></input>\n                </div>\n                <div className=\"inputAndLabel\">\n                    <label htmlFor=\"dateTo\">End Date</label><br />\n                    <input type=\"date\" name=\"dateTo\" value={inputValues.dateTo} onChange={handleChange}></input>\n                </div>\n                    <input type=\"submit\" id=\"submitExp\"></input>\n            </form>\n        </div>\n    );\n} else {\n    return(\n        <div className=\"previewDiv\">\n            <PreviewExperience company={inputValues.company} position={inputValues.position} responsibilities={inputValues.responsibilities} dateFrom={inputValues.dateFrom} dateTo={inputValues.dateTo} />\n            <button class=\"edit\" onClick={handleToggle}>Edit</button>\n        </div>\n    )\n}\n}\n\n\n    \n\n\nexport default Experience;","function Header(props) {\n    return (\n    <header>\n        <h1>Welcome back {props.user}</h1>\n    </header>\n    );\n  }\n\nHeader.defaultProps = { user: ''}\n  \n\nexport default Header","import General from './Components/General.js'\nimport Education from './Components/Education.js'\nimport Experience from './Components/Experience.js'\nimport Header from './Components/Header.js'\nimport './styles.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n          <Header />\n          <General />\n          <Education />\n          <Experience />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}